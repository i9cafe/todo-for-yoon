{"version":3,"sources":["components/CheckBox.module.css","Hello.js","Counter.js","Wrapper.js","hooks/useInputs.js","components/Button.js","components/Box.js","components/CheckBox.js","components/Button2.js","components/Dialog.js","components/TodoTemplate.js","TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","reportWebVitals.js","index.js","components/Box.module.css"],"names":["module","exports","Hello","this","props","color","name","isSpecial","style","Component","defaultProps","Wrapper","useInputs","Button","children","size","outline","fullWidth","rest","className","classNames","Box","bind","styles","CheckBox","colorStyles","css","theme","selected","palette","lighten","darken","sizes","large","height","fontSize","medium","small","sizeStyles","fullWidthStyle","StyledButton","styled","button","Button2","fadeIn","keyframes","fadeOut","slideUp","slideDown","DarkBackground","div","disappear","DialogBlock","ButtonGroup","ShortMarginButton","Dialog","title","confirmText","cancelText","onDialogConfirm","onDialogCancel","visible","useState","animate","setAnimate","localVisible","setLocalVisible","useEffect","setTimeout","onClick","TodoTemplateBlock","TodoTemplate","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","undoneTasks","today","Date","year","getFullYear","month","getMonth","date","getDate","todayLabel","getDay","length","Remove","TodoItemBlock","CheckCircle","Text","TodoItem","React","memo","TodoListBlock","TodoList","todos","index","CircleButton","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.385d821a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"CheckBox_checkbox__1TU5q\",\"icon\":\"CheckBox_icon__2CUbu\",\"checked\":\"CheckBox_checked__2gqRM\"};","import React, { Component } from 'react';\r\n\r\nclass Hello extends Component {\r\n    static defaultProps = {\r\n        name: '이름없음'\r\n    };\r\n\r\n    render() {\r\n        const { color, name, isSpecial } = this.props;\r\n        \r\n        return ( \r\n            <div style={{ color }}>\r\n                {isSpecial && <b>*</b>}\r\n                안녕하세요 {name}\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default Hello;","import React, { useState, useReducer, Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        counter: 0,\r\n        fixed: 1\r\n    };\r\n\r\n    handleIncrease = () => {\r\n        this.setState(state => ({\r\n            counter: this.state.counter + 1\r\n        }));\r\n    }\r\n\r\n    handleDecrease = () => {\r\n        this.setState(state => ({\r\n            counter: this.state.counter - 1\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.counter}</h1>\r\n                <button onClick={this.handleIncrease}>+1</button>\r\n                <button onClick={this.handleDecrease}>-1</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;","import React from 'react';\r\n\r\nfunction Wrapper(props) {\r\n\r\n    const style = {\r\n        border: '2px solid black',\r\n        padding: '16px'\r\n    }\r\n\r\n    return (\r\n        <div style={style}>{props.children}</div>\r\n    );\r\n\r\n}\r\n\r\nexport default Wrapper;","import { useState, useCallback } from 'react';\r\n\r\nfunction useInputs(initialForm) {\r\n    const [form, setForm] = useState(initialForm);\r\n\r\n    const onChange = useCallback(e => {\r\n        setForm(form => ({\r\n            ...form,\r\n            [e.target.name]: e.target.value            \r\n        }));\r\n    }, []);\r\n\r\n    const reset = useCallback(() => setForm(initialForm), [initialForm]);\r\n\r\n    return [form, onChange, reset];    \r\n}\r\n\r\nexport default useInputs;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Button.scss';\r\n\r\nfunction Button({ children, size, color, outline, fullWidth, ...rest }) {\r\n    return <button className={classNames('Button', size, color, { outline, fullWidth })} {...rest}>{children}</button>;\r\n}\r\n\r\nButton.defaultProps = {\r\n    size: 'medium',\r\n    color: 'blue'\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport styles from './Box.module.css';\r\n\r\nfunction Box() {\r\n    return <div class={styles.Box}>{styles.Box}</div>;\r\n}\r\n\r\nexport default Box;","import React from 'react';\r\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from 'react-icons/md';\r\nimport styles from './CheckBox.module.css';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction CheckBox ({ children, checked, ...rest }) {\r\n    return (\r\n        <div className={cx('checkbox')}>\r\n            <label>\r\n                <input type=\"checkbox\" checked={checked} {...rest}></input>                \r\n                <div className={cx('icon')}>\r\n                    {checked ? (\r\n                        <MdCheckBox className={cx('checkbox')} />\r\n                    ) : (\r\n                        <MdCheckBoxOutlineBlank />\r\n                    )}\r\n                </div>\r\n            </label>\r\n            <span>\r\n                {children}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckBox;","import { getDefaultNormalizer } from '@testing-library/react';\r\nimport React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { darken, lighten } from 'polished';\r\n\r\nconst colorStyles = css`\r\n    ${({ theme, color }) => {\r\n        const selected = theme.palette[color];\r\n        return css`\r\n            background: ${selected};\r\n            &:hover {\r\n                background: ${lighten(0.1, selected)};\r\n            }\r\n            &:active {\r\n                background: ${darken(0.1, selected)};\r\n            }\r\n\r\n            ${props => \r\n                props.outline && css`\r\n                    color: ${selected};\r\n                    background: none;\r\n                    border: 1px solid ${selected};\r\n                    &:hover {\r\n                        background: ${selected};\r\n                        color: white;\r\n                    }\r\n                `\r\n            }\r\n        `;\r\n    }}\r\n`;\r\n\r\nconst sizes = {\r\n    large: {\r\n        height: '3rem',\r\n        fontSize: '1.25rem'\r\n      },\r\n      medium: {\r\n        height: '2.25rem',\r\n        fontSize: '1rem'\r\n      },\r\n      small: {\r\n        height: '1.75rem',\r\n        fontSize: '0.875rem'\r\n      }\r\n};\r\n\r\nconst sizeStyles = css`\r\n    ${({ size }) => css`\r\n        height: ${sizes[size].height};\r\n        font-size: ${sizes[size].fontSize};\r\n    `}\r\n`;\r\n\r\nconst fullWidthStyle = css`\r\n    ${props =>\r\n        props.fullWidth && css`\r\n            width: 100%;\r\n            justify-content: center;\r\n            &:not(:first-child) {\r\n                margin-left: 0;\r\n                margin-top: 1rem;\r\n            }\r\n        `\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    /* 공통 스타일 */\r\n    display: inline-flex;\r\n    outline: none;\r\n    border: none;\r\n    border-radius: 4px;\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n\r\n    /* 크기 */\r\n    ${sizeStyles}\r\n\r\n    /* 색상 */\r\n    ${colorStyles}    \r\n\r\n    /* 기타 */\r\n    & + & {\r\n        margin-left: 1rem;\r\n    }\r\n\r\n    ${fullWidthStyle}\r\n`;\r\n\r\nfunction Button2({ children, color, size, outline, fullWidth, ...rest }) {\r\n    return (\r\n        <StyledButton\r\n            color={color}\r\n            size={size}\r\n            outline={outline}\r\n            fullWidth={fullWidth}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </StyledButton>\r\n    );\r\n}\r\n\r\nButton2.defaultProps = {\r\n    color: 'blue',\r\n    size: 'medium'\r\n};\r\n\r\nexport default Button2;","import produce from 'immer';\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes, css } from 'styled-components';\r\nimport Button2 from './Button2';\r\n\r\nconst fadeIn = keyframes`\r\n    from {\r\n        opacity: 0\r\n    }\r\n    to {\r\n        opacity: 1\r\n    }\r\n`;\r\n\r\nconst fadeOut = keyframes`\r\n    from {\r\n        opacity: 1\r\n    }\r\n    to {\r\n        opacity: 0\r\n    }\r\n`;\r\n\r\nconst slideUp = keyframes`\r\n    from {\r\n        transform: translateY(200px);\r\n    }\r\n    to {\r\n        transform: translateY(0px);\r\n    }\r\n`;\r\n\r\nconst slideDown = keyframes`\r\n    from {\r\n        transform: translateY(0px);\r\n    }\r\n    to {\r\n        transform: translateY(200px);\r\n    }\r\n`;\r\n\r\nconst DarkBackground = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: rgba(0, 0, 0, 0.8);\r\n\r\n    animation-duration: 0.25s;\r\n    animation-timing-function: ease-out;\r\n    animation-name: ${fadeIn};\r\n    animation-fill-mode: forwards;\r\n\r\n    ${props =>\r\n        props.disappear && css`\r\n            animation-name: ${fadeOut}\r\n        `\r\n    }\r\n`;\r\n\r\nconst DialogBlock = styled.div`\r\n    width: 320px;\r\n    padding: 1.5rem;\r\n    background: white;\r\n    border-radius: 2px;\r\n    h3 {\r\n    margin: 0;\r\n    font-size: 1.5rem;\r\n    }\r\n    p {\r\n    font-size: 1.125rem;\r\n    }\r\n\r\n    animation-duration: 0.25s;\r\n    animation-timing-function: ease-out;\r\n    animation-name: ${slideUp};\r\n    animation-fill-mode: forwards;\r\n\r\n    ${props => \r\n        props.disappear && css`\r\n            animation-name: ${slideDown}\r\n        `\r\n    }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n    margin-top: 3rem;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nconst ShortMarginButton = styled(Button2)`\r\n    & + & {\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\nfunction Dialog({ title, children, confirmText, cancelText, onDialogConfirm, onDialogCancel, visible }) {\r\n    const [animate, setAnimate] = useState(false);\r\n    const [localVisible, setLocalVisible] = useState(visible);\r\n\r\n    useEffect(() => {\r\n        if (localVisible && !visible) {\r\n            setAnimate(true);\r\n            setTimeout(() => setAnimate(false), 250);\r\n        }\r\n        setLocalVisible(visible);        \r\n    }, [localVisible, visible]);\r\n\r\n    if (!animate && !localVisible) return null;\r\n\r\n    return (\r\n        <DarkBackground disappear={!visible}>\r\n            <DialogBlock disappear={!visible}>\r\n                <h3>{title}</h3>\r\n                <p>{children}</p>\r\n                <ButtonGroup>\r\n                    <ShortMarginButton color=\"gray\" onClick={onDialogCancel}>{cancelText}</ShortMarginButton>\r\n                    <ShortMarginButton color=\"pink\" onClick={onDialogConfirm}>{confirmText}</ShortMarginButton>\r\n                </ButtonGroup>\r\n            </DialogBlock>\r\n        </DarkBackground>\r\n    );\r\n}\r\n\r\nDialog.defaultProps = {\r\n    confirmText: '확인',\r\n    cancelText: '취소'\r\n};\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n\r\n    width: 512px;\r\n    height: 768px;\r\n\r\n    position: relative;\r\n    background: white;\r\n    border-radius: 16px;    \r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\r\n\r\n    margin-top: 96px;\r\n    margin-bottom: 32px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n`;\r\n\r\nfunction TodoTemplate({ children }) {\r\n\r\n    return (\r\n        <div>\r\n            <TodoTemplateBlock>{children}</TodoTemplateBlock>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoTemplate;","import React, { useReducer, createContext, useContext, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n    {\r\n        id: 1,\r\n        text: `\"사랑해요\" 말하기`,\r\n        done: false\r\n    },\r\n    {\r\n        id: 2,\r\n        text: `뽀뽀`,\r\n        done: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text: `꼭 안아주기`,\r\n        done: false\r\n    }\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return state.concat(action.todo);\r\n        \r\n        case 'TOGGLE':\r\n            return state.map(todo =>\r\n                todo.id === action.id ? { ...todo, done: !todo.done } : todo    \r\n            );\r\n        \r\n        case 'REMOVE':\r\n            return state.filter(todo => todo.id !== action.id);\r\n        \r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n    const nextId = useRef(4);\r\n\r\n    return (\r\n        <div>\r\n            <TodoStateContext.Provider value={state}>\r\n                <TodoDispatchContext.Provider value={dispatch}>\r\n                    <TodoNextIdContext.Provider value={nextId}>\r\n                        {children}\r\n                    </TodoNextIdContext.Provider>\r\n                </TodoDispatchContext.Provider>\r\n            </TodoStateContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function useTodoState() {\r\n    const context = useContext(TodoStateContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n    const context = useContext(TodoDispatchContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n    const context = useContext(TodoNextIdContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext';\r\nimport TodoTemplate from './TodoTemplate';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n\r\n    padding: 48px 32px 24px 32px;\r\n    border-bottom: 1px solid #e9ecef;\r\n\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n    }\r\n    \r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n\r\n`;\r\n\r\nfunction TodoHead() {\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter(todo => !todo.done);    \r\n\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = today.getMonth() + 1;\r\n    const date = today.getDate();\r\n    const week = ['일', '월', '화', '수', '목', '금', '토'];\r\n    const todayLabel = week[today.getDay()];\r\n\r\n    return (\r\n        <div>\r\n            <TodoHeadBlock>\r\n                <h1>{year}년 {month}월 {date}일</h1>\r\n                <div className=\"day\">{todayLabel}요일</div>\r\n                <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\r\n            </TodoHeadBlock>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoHead;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete } from 'react-icons/md';\r\nimport { useTodoDispatch } from '../TodoContext';\r\n\r\nconst Remove = styled.div`\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #ff6b6b;\r\n    }\r\n    display: none;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover {\r\n      ${Remove} {\r\n        display: initial;\r\n      }\r\n    }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    border: 1px solid #ced4da;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n\r\n    ${props => \r\n        props.done && css`\r\n            border: 1px solid #38d9a9;\r\n            color: #38d9a9;\r\n        `\r\n    }\r\n`;\r\n\r\nconst Text = styled.div`\r\n\r\n    flex: 1;\r\n    font-size: 21px;\r\n    color: #495057;\r\n    ${props => \r\n        props.done && css`\r\n            color: #ced4da;\r\n        `\r\n    }\r\n`;\r\n\r\nfunction TodoItem({ id, done, text }) {\r\n\r\n    const dispatch = useTodoDispatch();\r\n    const onToggle = () => dispatch({type: 'TOGGLE', id});\r\n    const onRemove = () => dispatch({type: 'REMOVE', id});\r\n\r\n    return (\r\n        <div>\r\n            <TodoItemBlock>\r\n                <CheckCircle done={done} onClick={onToggle}>\r\n                    {done && <MdDone></MdDone>}\r\n                </CheckCircle>\r\n                <Text done={done}>\r\n                    {text}\r\n                </Text>\r\n                <Remove onClick={onRemove}>\r\n                    <MdDelete></MdDelete>\r\n                </Remove>\r\n            </TodoItemBlock>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoItem);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoListBlock = styled.div`\r\n\r\n    flex: 1;\r\n    padding: 20px 32px 48px;\r\n    overflow-y: auto;\r\n    max-height: 390px;\r\n\r\n`;\r\n\r\nfunction TodoList() {\r\n    const todos = useTodoState();\r\n\r\n    return (\r\n        <div>\r\n            <TodoListBlock>\r\n                {todos.map((todo, index) => (\r\n                    <TodoItem key={index} id={todo.id} text={todo.text} done={todo.done}>                        \r\n                    </TodoItem>\r\n                ))}                            \r\n            </TodoListBlock>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\r\n\r\nconst CircleButton = styled.div`\r\n    background: #38d9a9;\r\n    &:hover {\r\n    background: #63e6be;\r\n    }\r\n    &:active {\r\n    background: #20c997;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: block;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n    color: white;\r\n    border-radius: 50%;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: 0.125s all ease-in;\r\n    ${props =>\r\n        props.open &&\r\n            css`\r\n                background: #ff6b6b;\r\n                &:hover {\r\n                background: #ff8787;\r\n                }\r\n                &:active {\r\n                background: #fa5252;\r\n                }\r\n                transform: translate(-50%, 50%) rotate(45deg);\r\n            `\r\n    }\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n    width: 100%;\r\n    bottom: 0;\r\n    left: 0;\r\n    position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding-left: 32px;\r\n    padding-top: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 72px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState('');\r\n\r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const onToggle = () => {\r\n        setValue('');\r\n        setOpen(!open)\r\n    };\r\n    const onChange = (e) => setValue(e.target.value);\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch({\r\n            type: 'CREATE',\r\n            todo: {\r\n                id: nextId.current,\r\n                text: value,\r\n                done: false\r\n            }\r\n        });        \r\n        \r\n        setOpen(false);\r\n        nextId.current += 1;\r\n    };\r\n    \r\n    return(\r\n        <div>\r\n            {open && (\r\n                <InsertFormPositioner>\r\n                    <InsertForm onSubmit={onSubmit}>\r\n                        <Input autoFocus placeholder=\"할 일을 입력 후, Enter 를 누르세요\" onChange={onChange} value={value}></Input>\r\n                    </InsertForm>\r\n                </InsertFormPositioner>\r\n            )}\r\n            <CircleButton onClick={onToggle} open={open}>\r\n                <MdAdd></MdAdd>\r\n            </CircleButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoCreate);","import React, { useRef, useState, useMemo, useCallback, useReducer } from 'react';\nimport produce from 'immer';\nimport Hello from './Hello';\nimport Wrapper from './Wrapper';\nimport Counter from './Counter';\nimport InputSample from './InputSample';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\nimport useInputs from './hooks/useInputs';\nimport './App.css';\nimport './App.scss';\nimport Button from './components/Button';\nimport Box from './components/Box';\nimport CheckBox from './components/CheckBox';\nimport styled, { css, ThemeProvider } from 'styled-components';\nimport Button2 from './components/Button2';\nimport Dialog from './components/Dialog';\nimport { createGlobalStyle } from 'styled-components';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoCreate from './components/TodoCreate';\nimport { TodoProvider } from './TodoContext';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nfunction App() {\n\n  return (\n    <>\n      <TodoProvider>\n        <GlobalStyle></GlobalStyle>\n        <TodoTemplate>\n          <TodoHead></TodoHead>\n          <TodoList></TodoList>\n          <TodoCreate></TodoCreate>\n        </TodoTemplate>\n      </TodoProvider>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Counter from './Counter';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Box_Box__2hcUm\"};"],"sourceRoot":""}